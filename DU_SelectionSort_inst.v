// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.0 (Build Build 614 04/24/2018)
// Created on Mon Jun 20 02:54:51 2022

DU_SelectionSort DU_SelectionSort_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.rst(rst_sig) ,	// input  rst_sig
	.swap(swap_sig) ,	// input  swap_sig
	.PS(PS_sig) ,	// input [2:0] PS_sig
	.val_in(val_in_sig) ,	// input [bitwidth-1:0] val_in_sig
	.val_out(val_out_sig) ,	// output [bitwidth-1:0] val_out_sig
	.run(run_sig) ,	// output  run_sig
	.end_load(end_load_sig) ,	// output  end_load_sig
	.hit_i(hit_i_sig) ,	// output  hit_i_sig
	.hit_j(hit_j_sig) ,	// output  hit_j_sig
	.end_show(end_show_sig) ,	// output  end_show_sig
	.addr(addr_sig) ,	// output [7:0] addr_sig
	.i(i_sig) ,	// output [3:0] i_sig
	.j(j_sig) 	// output [3:0] j_sig
);

defparam DU_SelectionSort_inst.N = 10;
defparam DU_SelectionSort_inst.bitwidth = 8;
